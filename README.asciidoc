Java EE 7 using Eclipse
=======================

* Create a simple Dynamic Web Project
** Basic app
*** Choose the module version as ``3.1''
*** Add a new configuration for WildFly
*** Add `index.html` in ``WebContent''
*** ``Run as'', ``Run on Server''
*** Change content on `index.html` and show LiveReload
** Servlet
*** Add a new Servlet
*** In Servers tab, select the module, right-click and select ``Restart'' to restart the module
*** Show http://localhost:8080/helloworld/HelloServlet
** Persistence
*** Right-click on project, select ``Properties'', search for ``facet'', enable ``JPA'', click on ``Apply'', talk about ``Further configuration available'' and default data source
** Create a new entity
** Add a primary key
+
[source, java]
----
@Id
private int id;
----
+
** Generate Getter/Setter by clicking ``Source'', ``Getters and Setters''.
** Copy the https://github.com/jboss-developer/jboss-eap-quickstarts/blob/6.3.0.GA/h2-console/h2console.war?raw=true[H2 console war] to the server standalone/deployments directory.
** Start the server and access http://localhost:8080/h2console
** You need to enter the JDBC URL, and credentials. To access the "test" database your application uses, enter these details:
*** JDBC URL: jdbc:h2:mem:test;DB_CLOSE_ON_EXIT=FALSE;DB_CLOSE_DELAY=-1
*** User Name: sa
*** Password: sa
** Add the following properties to `persistence.xml`:
+
[source.xml]
----
<properties>
	<property name="javax.persistence.schema-generation.database.action"
		value="drop-and-create" />
	<property name="javax.persistence.schema-generation.create-source"
		value="metadata" />
	<property name="javax.persistence.schema-generation.drop-source"
		value="metadata" />
	<property name="hibernate.show_sql" value="true"/>
	<property name="hibernate.format_sql" value="true"/>		
</properties>
----
+



* Basic Maven project creation
** Search for `wildfly-javaee7` archetype - there are 4, which one to choose and when ?
* JAX-RS
** Wizards
** Content assist
** Validation
** Navigation
* CDI
** Wizards:
http://docs.jboss.org/tools/4.1.x.Final/en/cdi_tools_reference_guide/html/chap-CDI_Tools_Reference_Guide-Creating_a_CDI_Web_Project.html[New CDI Web Project Wizard],
http://docs.jboss.org/tools/4.1.x.Final/en/cdi_tools_reference_guide/html/chap-CDI_Tools_Reference_Guide-Wizards_and_Dialogs.html#d0e555[CDI Wizards]
** Content assist: CDI Named Beans are available in JSF EL #{} content assist in XHTML/Java/XML files (See JSF)
** Validation:
http://docs.jboss.org/tools/4.1.x.Final/en/cdi_tools_reference_guide/html/chap-CDI_Tools_Reference_Guide-Validation.html
** Navigation (open the bean producer from the @Inject annotation for example):
http://docs.jboss.org/tools/4.1.x.Final/en/cdi_tools_reference_guide/html/chap-CDI_Tools_Reference_Guide-Hyperlink_Navigation.html[Java source navigation], from EL #{} to CDI bean (See JSF)
** Open CDI Named bean: http://docs.jboss.org/tools/4.1.x.Final/en/cdi_tools_reference_guide/html_single/index.html#d0e597
** Beans.xml editor: Content assist, Navigation, Validation
http://docs.jboss.org/tools/whatsnew/cdi/cdi-news-3.2.0.Beta1.html
** Search usage: https://issues.jboss.org/browse/JBIDE-8705[Injection Points], EL #{} (See JSF)
* JSF
** EL content assist in XHTML: http://docs.jboss.org/tools/whatsnew/jst/jst-news-3.3.0.M3.html
** Navigation from/to bean
** Search usage
** Refactoring:
http://docs.jboss.org/tools/whatsnew/jst/jst-news-3.2.0.M1.html
** New JSF project wizard (JSF 2.2 or older)
** Composite component code assist:
https://issues.jboss.org/browse/JBIDE-4970, http://docs.jboss.org/tools/whatsnew/jst/jst-news-3.2.0.Beta2.html, Validation and refactoring are also available
** EL Validation: http://docs.jboss.org/tools/whatsnew/jst/jst-news-3.2.0.M2.html
* Java EE 7 and OpenShift
* Java EE 7 and Forge
** Configure JPA 2.1
** Generate Batch Job XML
** Continuous Delivery
* Misc
** LiveReload:
http://docs.jboss.org/tools/whatsnew/livereload/livereload-news-1.0.0.Alpha2.html

